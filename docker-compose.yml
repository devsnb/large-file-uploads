services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    environment:
      - PORT=8080
      - JWT_SECRET=your-jwt-secret-key
      # MinIO configuration
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=uploads
      - MINIO_USE_SSL=false
      # Azure configuration (uncomment to use Azure)
      - STORAGE_PROVIDER=azure
      - AZURE_STORAGE_ACCOUNT=devstoreaccount1
      - AZURE_STORAGE_KEY=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==
      - AZURE_STORAGE_CONTAINER=uploads
      - AZURE_STORAGE_ENDPOINT=http://azurite:10000/devstoreaccount1
      - TUS_BASE_PATH=/files/
      - STORAGE_PATH=/app/uploads
    depends_on:
      minio:
        condition: service_healthy
      azurite:
        condition: service_started
    volumes:
      - uploads:/app/uploads
    networks:
      - upload-network
  minio:
    image: minio/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - upload-network
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - '10000:10000' # Blob service
      - '10001:10001' # Queue service
      - '10002:10002' # Table service
    volumes:
      - azurite-data:/data
    command: azurite --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0 --loose --location /data
    networks:
      - upload-network

networks:
  upload-network:
    driver: bridge

volumes:
  minio-data:
  uploads:
  azurite-data:
